module mealy_1011(in,rst,clk,out);
input in,rst,clk;
output reg out;
reg [2:0]ps,ns;
parameter s0=0,s1=1,s2=2,s3=3;

always @(posedge clk or posedge rst)
begin
if(rst) ps<=s0;
else ps<=ns;
end

always @(ps,in)
begin
case(ps)

s0:begin
ns=(in)?s1:s0;
out=(in)?0:0;
end

s1:begin
ns=(in)?s1:s2;
out=(in)?0:0;
end

s2:begin
ns=(in)?s3:s0;
out=(in)?0:0;
end

s3:begin
ns=(in)?s1:s2;
out=(in)?1:0;
end

default: ns<=s0;


endcase
end
endmodule

///TEST BENCH///
module tb;
reg clk,rst,in;
wire out;
mealy_1011 uut(.clk(clk),.rst(rst),.in(in),.out(out));
initial begin
in=0;clk=0;rst=0;
#1 rst=1;#2 rst=0;
#6 in=1; #4 in=0; #4 in=1; #4 in=1; #4 in=0; #4 in=1 ; #4 in=1 ;
#4 $finish;
end
always #2 clk=~clk;
endmodule
